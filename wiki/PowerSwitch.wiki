== Introduction: ==
I would like to be able to turn on/off PC by just switching on/off the button on power extension cord with switch:

http://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Socket_5.jpg/640px-Socket_5.jpg

Turning on is simple - just switch on the power extension switch ! 

The issue is with turning off - all PCs needs some time to shut down properly 
This idea is similar to the way how UPS communicates with PC in case of power failure.

== General concept: ==
 * arduino will be used as central unit
 *  arduino will control the relay module which will power PC
 * arduino will be connected to mains by power adapter and to PC with USB
 * power cord switch will switch on/off the arduino power adapter and not the PC
 *  arduino will auto-select the power source between power adapter and USB

== How does it work ? ==
=== Turning PC on: ===
 * switch on arduino's power adapter
 * arduino starts and by default sets relay in ON mode and PC boots up

=== Turning PC off (this is tricky part): ===
 * switch off arduino's adapter using button on extension cord
 * arduino switches itself to USB power source using built into board auto-select functionality
 * arduino "senses" that power adaptor is switched off
 * arduino sends message over USB to PC ordering PC to enter shut down sequence
 * arduino goes into sleep for the time needed for PC to shut down
 * arduino wakes up (at this point PC is already down)
 * arduino sets relay to OFF mode

== Modules: ==
There are 3 elements which had to be implemented:
 * software:
  * listener on PC to intercept the shut down message from arduino
  * software running on micro controller to monitor current power source
 * hardware:
  * device to monitor power source for arduino
  * relay to drive power for PC
  * led to show current status of the power switch and PC

== Software implementation details: ==

=== PC listener ===
This is code running on PC which is responsible for listening on the shut down message from arduino.
This code is written in Python and is based on infinitive loop which listens on data from serial.
Code was tested on Debian Squeezy.

=== Linux init scripts ===
This script is responsible for setting up, initiating and controlling arduino from PC at star up and shut down of the system.
Code was tested on Debian Squeezy.

=== Arduino code ===
This code is responsible for controlling LED and relay.

== Hardware implementation details: ==
Hardware is based on Arudino Uno:
http://upload.wikimedia.org/wikipedia/commons/thumb/9/9d/UnoConnections.jpg/640px-UnoConnections.jpg

=== Power source monitor ===
2 resistors connected between VCC/GND/A0 to intercept the switching off of power adaptor.
Arduino has built in functionalit to switching between power adaptor and USB.

=== Relay ===
Relay module.

=== LED ===
RGB LED connected to the board over 3 few resistors.
 

== Links ==
http://arduino.cc/forum/index.php?topic=134390.0 - initial discussion about approach to the problem
http://arduino.cc/forum/index.php?PHPSESSID=d748e197470782883febd919a95efbcf&topic=107860.msg809962#msg809962 - voltage divider
http://playground.arduino.cc/Interfacing/LinuxTTY - configuration of serial port under linux for communication with Arduino
http://playground.arduino.cc/Main/DisablingAutoResetOnSerialConnection - disabling auto-reset in Arduino

== Images == 
https://mpd-lirc.googlecode.com/svn/power-switch/wiki/images/photos/relay.box.front.jpg
https://mpd-lirc.googlecode.com/svn/power-switch/wiki/images/photos/main.open.front.JPG




this image was created with Fritzing